// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | QEST
  | COLON
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | OR
  | XOR
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | DO
  | UNTIL
  | MAX
  | MIN
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_QEST
    | TOKEN_COLON
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_OR
    | TOKEN_XOR
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_DO
    | TOKEN_UNTIL
    | TOKEN_MAX
    | TOKEN_MIN
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | QEST  -> 11 
  | COLON  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | OR  -> 27 
  | XOR  -> 28 
  | CHAR  -> 29 
  | ELSE  -> 30 
  | IF  -> 31 
  | INT  -> 32 
  | NULL  -> 33 
  | PRINT  -> 34 
  | PRINTLN  -> 35 
  | RETURN  -> 36 
  | VOID  -> 37 
  | WHILE  -> 38 
  | FOR  -> 39 
  | DO  -> 40 
  | UNTIL  -> 41 
  | MAX  -> 42 
  | MIN  -> 43 
  | CSTSTRING _ -> 44 
  | NAME _ -> 45 
  | CSTINT _ -> 46 
  | CSTBOOL _ -> 47 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_QEST 
  | 12 -> TOKEN_COLON 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_OR 
  | 28 -> TOKEN_XOR 
  | 29 -> TOKEN_CHAR 
  | 30 -> TOKEN_ELSE 
  | 31 -> TOKEN_IF 
  | 32 -> TOKEN_INT 
  | 33 -> TOKEN_NULL 
  | 34 -> TOKEN_PRINT 
  | 35 -> TOKEN_PRINTLN 
  | 36 -> TOKEN_RETURN 
  | 37 -> TOKEN_VOID 
  | 38 -> TOKEN_WHILE 
  | 39 -> TOKEN_FOR 
  | 40 -> TOKEN_DO 
  | 41 -> TOKEN_UNTIL 
  | 42 -> TOKEN_MAX 
  | 43 -> TOKEN_MIN 
  | 44 -> TOKEN_CSTSTRING 
  | 45 -> TOKEN_NAME 
  | 46 -> TOKEN_CSTINT 
  | 47 -> TOKEN_CSTBOOL 
  | 50 -> TOKEN_end_of_input
  | 48 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_Stmt 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtU 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_StmtU 
    | 40 -> NONTERM_StmtU 
    | 41 -> NONTERM_StmtU 
    | 42 -> NONTERM_Expr 
    | 43 -> NONTERM_Expr 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_AtExprNotAccess 
    | 69 -> NONTERM_AtExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_Access 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Exprs 
    | 77 -> NONTERM_Exprs 
    | 78 -> NONTERM_Exprs1 
    | 79 -> NONTERM_Exprs1 
    | 80 -> NONTERM_Const 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Type 
    | 85 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 50 
let _fsyacc_tagOfErrorTerminal = 48

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | QEST  -> "QEST" 
  | COLON  -> "COLON" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | OR  -> "OR" 
  | XOR  -> "XOR" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | DO  -> "DO" 
  | UNTIL  -> "UNTIL" 
  | MAX  -> "MAX" 
  | MIN  -> "MIN" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | QEST  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | XOR  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | UNTIL  -> (null : System.Object) 
  | MAX  -> (null : System.Object) 
  | MIN  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 47us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 12us; 65535us; 27us; 28us; 31us; 32us; 37us; 58us; 40us; 58us; 43us; 58us; 47us; 58us; 62us; 58us; 63us; 58us; 68us; 58us; 73us; 58us; 82us; 58us; 89us; 58us; 4us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 47us; 48us; 5us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 47us; 40us; 62us; 97us; 10us; 65535us; 37us; 49us; 40us; 49us; 43us; 49us; 47us; 49us; 62us; 50us; 63us; 64us; 68us; 69us; 73us; 74us; 82us; 83us; 89us; 90us; 10us; 65535us; 37us; 51us; 40us; 51us; 43us; 51us; 47us; 51us; 62us; 51us; 63us; 96us; 68us; 98us; 73us; 99us; 82us; 100us; 89us; 101us; 49us; 65535us; 37us; 52us; 40us; 52us; 43us; 52us; 45us; 46us; 47us; 52us; 54us; 56us; 60us; 61us; 62us; 52us; 63us; 52us; 66us; 67us; 68us; 52us; 71us; 72us; 73us; 52us; 76us; 77us; 78us; 79us; 80us; 81us; 82us; 52us; 84us; 85us; 86us; 87us; 89us; 52us; 92us; 93us; 103us; 104us; 112us; 113us; 115us; 145us; 118us; 119us; 120us; 121us; 146us; 123us; 147us; 124us; 148us; 125us; 150us; 126us; 151us; 127us; 154us; 128us; 155us; 129us; 157us; 130us; 158us; 131us; 159us; 132us; 160us; 133us; 161us; 134us; 162us; 135us; 163us; 136us; 164us; 137us; 165us; 138us; 166us; 139us; 167us; 140us; 168us; 141us; 169us; 143us; 171us; 142us; 182us; 144us; 185us; 145us; 49us; 65535us; 37us; 109us; 40us; 109us; 43us; 109us; 45us; 109us; 47us; 109us; 54us; 109us; 60us; 109us; 62us; 109us; 63us; 109us; 66us; 109us; 68us; 109us; 71us; 109us; 73us; 109us; 76us; 109us; 78us; 109us; 80us; 109us; 82us; 109us; 84us; 109us; 86us; 109us; 89us; 109us; 92us; 109us; 103us; 109us; 112us; 109us; 115us; 109us; 118us; 109us; 120us; 109us; 146us; 109us; 147us; 109us; 148us; 109us; 150us; 109us; 151us; 109us; 154us; 109us; 155us; 109us; 157us; 109us; 158us; 109us; 159us; 109us; 160us; 109us; 161us; 109us; 162us; 109us; 163us; 109us; 164us; 109us; 165us; 109us; 166us; 109us; 167us; 109us; 168us; 109us; 169us; 109us; 171us; 110us; 182us; 109us; 185us; 109us; 50us; 65535us; 37us; 111us; 40us; 111us; 43us; 111us; 45us; 111us; 47us; 111us; 54us; 111us; 60us; 111us; 62us; 111us; 63us; 111us; 66us; 111us; 68us; 111us; 71us; 111us; 73us; 111us; 76us; 111us; 78us; 111us; 80us; 111us; 82us; 111us; 84us; 111us; 86us; 111us; 89us; 111us; 92us; 111us; 103us; 111us; 112us; 111us; 115us; 111us; 118us; 111us; 120us; 111us; 146us; 111us; 147us; 111us; 148us; 111us; 150us; 111us; 151us; 111us; 154us; 111us; 155us; 111us; 157us; 111us; 158us; 111us; 159us; 111us; 160us; 111us; 161us; 111us; 162us; 111us; 163us; 111us; 164us; 111us; 165us; 111us; 166us; 111us; 167us; 111us; 168us; 111us; 169us; 111us; 171us; 111us; 179us; 181us; 182us; 111us; 185us; 111us; 52us; 65535us; 37us; 108us; 40us; 108us; 43us; 108us; 45us; 108us; 47us; 108us; 54us; 108us; 60us; 108us; 62us; 108us; 63us; 108us; 66us; 108us; 68us; 108us; 71us; 108us; 73us; 108us; 76us; 108us; 78us; 108us; 80us; 108us; 82us; 108us; 84us; 108us; 86us; 108us; 89us; 108us; 92us; 108us; 103us; 108us; 112us; 108us; 115us; 108us; 118us; 108us; 120us; 108us; 146us; 108us; 147us; 108us; 148us; 108us; 150us; 108us; 151us; 108us; 154us; 108us; 155us; 108us; 157us; 108us; 158us; 108us; 159us; 108us; 160us; 108us; 161us; 108us; 162us; 108us; 163us; 108us; 164us; 108us; 165us; 108us; 166us; 108us; 167us; 108us; 168us; 108us; 169us; 108us; 171us; 107us; 173us; 174us; 176us; 177us; 179us; 180us; 182us; 108us; 185us; 108us; 1us; 65535us; 115us; 116us; 2us; 65535us; 115us; 184us; 185us; 186us; 50us; 65535us; 37us; 170us; 40us; 170us; 43us; 170us; 45us; 170us; 47us; 170us; 54us; 170us; 60us; 170us; 62us; 170us; 63us; 170us; 66us; 170us; 68us; 170us; 71us; 170us; 73us; 170us; 76us; 170us; 78us; 170us; 80us; 170us; 82us; 170us; 84us; 170us; 86us; 170us; 89us; 170us; 92us; 170us; 103us; 170us; 112us; 170us; 115us; 170us; 118us; 170us; 120us; 170us; 146us; 170us; 147us; 170us; 148us; 170us; 150us; 170us; 151us; 170us; 154us; 170us; 155us; 170us; 157us; 170us; 158us; 170us; 159us; 170us; 160us; 170us; 161us; 170us; 162us; 170us; 163us; 170us; 164us; 170us; 165us; 170us; 166us; 170us; 167us; 170us; 168us; 170us; 169us; 170us; 171us; 170us; 179us; 170us; 182us; 170us; 185us; 170us; 9us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; 47us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 24us; 27us; 30us; 34us; 47us; 52us; 58us; 69us; 80us; 130us; 180us; 231us; 284us; 286us; 289us; 340us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 2us; 21us; 22us; 1us; 21us; 1us; 21us; 1us; 22us; 17us; 22us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 22us; 1us; 22us; 1us; 23us; 3us; 23us; 29us; 35us; 1us; 24us; 19us; 25us; 33us; 40us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 25us; 2us; 26us; 27us; 1us; 26us; 17us; 27us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 27us; 1us; 28us; 3us; 29us; 35us; 36us; 3us; 29us; 35us; 36us; 19us; 29us; 35us; 36us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 3us; 29us; 35us; 36us; 2us; 29us; 35us; 1us; 29us; 2us; 30us; 37us; 2us; 30us; 37us; 18us; 30us; 37us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 30us; 37us; 1us; 30us; 2us; 31us; 38us; 2us; 31us; 38us; 18us; 31us; 38us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 31us; 38us; 1us; 31us; 2us; 32us; 39us; 2us; 32us; 39us; 18us; 32us; 39us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 32us; 39us; 18us; 32us; 39us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 32us; 39us; 18us; 32us; 39us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 32us; 39us; 1us; 32us; 2us; 33us; 40us; 18us; 33us; 40us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 33us; 40us; 18us; 33us; 40us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 33us; 40us; 2us; 34us; 41us; 1us; 34us; 1us; 34us; 1us; 34us; 17us; 34us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 1us; 39us; 1us; 41us; 1us; 41us; 1us; 41us; 17us; 41us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 41us; 1us; 41us; 4us; 42us; 45us; 72us; 75us; 3us; 42us; 45us; 75us; 1us; 43us; 2us; 43us; 69us; 1us; 44us; 1us; 45us; 17us; 45us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 46us; 71us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 47us; 17us; 47us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 48us; 17us; 48us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 49us; 17us; 50us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 53us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 53us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 16us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 17us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 75us; 18us; 50us; 51us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 78us; 79us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 53us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 2us; 69us; 72us; 1us; 69us; 1us; 70us; 2us; 70us; 75us; 1us; 71us; 1us; 72us; 2us; 72us; 75us; 1us; 72us; 2us; 73us; 74us; 2us; 73us; 75us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 77us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 97us; 99us; 101us; 103us; 121us; 123us; 125us; 127us; 131us; 133us; 153us; 155us; 158us; 160us; 178us; 180us; 182us; 186us; 190us; 210us; 214us; 217us; 219us; 222us; 225us; 244us; 247us; 249us; 252us; 255us; 274us; 277us; 279us; 282us; 285us; 304us; 307us; 326us; 329us; 348us; 351us; 353us; 356us; 375us; 378us; 397us; 400us; 403us; 405us; 407us; 409us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 465us; 467us; 469us; 474us; 478us; 480us; 483us; 485us; 487us; 505us; 508us; 510us; 512us; 514us; 516us; 534us; 536us; 554us; 556us; 574us; 592us; 610us; 628us; 646us; 664us; 682us; 700us; 718us; 736us; 754us; 772us; 790us; 808us; 826us; 844us; 862us; 880us; 898us; 915us; 933us; 951us; 970us; 972us; 974us; 976us; 978us; 980us; 982us; 984us; 986us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1008us; 1010us; 1012us; 1014us; 1016us; 1018us; 1020us; 1023us; 1025us; 1027us; 1030us; 1032us; 1034us; 1037us; 1039us; 1042us; 1045us; 1047us; 1049us; 1051us; 1053us; 1055us; 1057us; 1059us; 1061us; 1063us; 1065us; 1067us; 1069us; |]
let _fsyacc_action_rows = 194
let _fsyacc_actionTableElements = [|3us; 16386us; 29us; 193us; 32us; 192us; 37us; 23us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 29us; 193us; 32us; 192us; 37us; 23us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 24us; 14us; 45us; 12us; 3us; 32768us; 1us; 16us; 24us; 14us; 45us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 24us; 14us; 45us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 24us; 14us; 45us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 46us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 45us; 24us; 1us; 32768us; 1us; 25us; 2us; 16398us; 29us; 193us; 32us; 192us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 2us; 16398us; 29us; 193us; 32us; 192us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 2us; 32768us; 29us; 193us; 32us; 192us; 0us; 16401us; 22us; 16403us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 29us; 193us; 31us; 59us; 32us; 192us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 1us; 32768us; 4us; 39us; 0us; 16402us; 22us; 16403us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 29us; 193us; 31us; 59us; 32us; 192us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16404us; 2us; 32768us; 7us; 43us; 9us; 45us; 22us; 16403us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 29us; 193us; 31us; 59us; 32us; 192us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16405us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 7us; 47us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 22us; 16403us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 29us; 193us; 31us; 59us; 32us; 192us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16406us; 0us; 16407us; 1us; 16407us; 30us; 63us; 0us; 16408us; 18us; 32768us; 7us; 53us; 10us; 147us; 11us; 84us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 0us; 16409us; 14us; 32768us; 1us; 171us; 7us; 55us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16410us; 17us; 32768us; 7us; 57us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 1us; 60us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 2us; 62us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 20us; 32768us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 31us; 59us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 20us; 32768us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 31us; 59us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16413us; 1us; 32768us; 1us; 66us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 2us; 68us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 20us; 32768us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 31us; 59us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16414us; 1us; 32768us; 1us; 71us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 2us; 73us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 20us; 32768us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 31us; 59us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16415us; 1us; 32768us; 1us; 76us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 7us; 78us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 7us; 80us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 2us; 82us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 20us; 32768us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 31us; 59us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16416us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 10us; 147us; 12us; 86us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 7us; 88us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 0us; 16417us; 20us; 32768us; 1us; 171us; 3us; 37us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 31us; 59us; 33us; 191us; 34us; 120us; 35us; 122us; 36us; 54us; 38us; 65us; 39us; 75us; 40us; 89us; 41us; 70us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 1us; 32768us; 38us; 91us; 1us; 32768us; 1us; 92us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 2us; 94us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 1us; 32768us; 7us; 95us; 0us; 16418us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 0us; 16423us; 1us; 32768us; 38us; 102us; 1us; 32768us; 1us; 103us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 17us; 32768us; 2us; 105us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 1us; 32768us; 7us; 106us; 0us; 16425us; 3us; 16426us; 2us; 178us; 5us; 182us; 9us; 112us; 2us; 16426us; 5us; 182us; 9us; 112us; 0us; 16427us; 1us; 16427us; 2us; 172us; 0us; 16428us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 16us; 16429us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 1us; 16455us; 1us; 115us; 13us; 16460us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 1us; 32768us; 2us; 117us; 0us; 16430us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 1us; 16431us; 10us; 147us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 16us; 16432us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 0us; 16433us; 13us; 16434us; 10us; 147us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 28us; 148us; 1us; 16435us; 10us; 147us; 12us; 16436us; 10us; 147us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 17us; 32768us; 8us; 151us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 17us; 32768us; 2us; 152us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 17us; 32768us; 8us; 155us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 17us; 32768us; 2us; 156us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 4us; 16439us; 10us; 147us; 24us; 159us; 25us; 160us; 26us; 161us; 4us; 16440us; 10us; 147us; 24us; 159us; 25us; 160us; 26us; 161us; 1us; 16441us; 10us; 147us; 1us; 16442us; 10us; 147us; 1us; 16443us; 10us; 147us; 10us; 16444us; 10us; 147us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 10us; 16445us; 10us; 147us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 10us; 16446us; 10us; 147us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 10us; 16447us; 10us; 147us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 10us; 16448us; 10us; 147us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 10us; 16449us; 10us; 147us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 14us; 16450us; 10us; 147us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 16us; 32768us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 15us; 16451us; 10us; 147us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 17us; 32768us; 6us; 183us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 17us; 16462us; 8us; 185us; 10us; 147us; 14us; 169us; 15us; 168us; 16us; 162us; 17us; 163us; 18us; 164us; 19us; 165us; 20us; 166us; 21us; 167us; 22us; 157us; 23us; 158us; 24us; 159us; 25us; 160us; 26us; 161us; 27us; 146us; 28us; 148us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 1us; 32768us; 1us; 150us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16437us; 1us; 32768us; 1us; 154us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16438us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16452us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16453us; 3us; 32768us; 1us; 176us; 24us; 179us; 45us; 175us; 1us; 16454us; 5us; 182us; 0us; 16455us; 3us; 32768us; 1us; 176us; 24us; 179us; 45us; 175us; 2us; 32768us; 2us; 178us; 5us; 182us; 0us; 16456us; 8us; 32768us; 1us; 171us; 10us; 173us; 23us; 189us; 24us; 179us; 33us; 191us; 45us; 175us; 46us; 187us; 47us; 188us; 1us; 16457us; 5us; 182us; 0us; 16458us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16459us; 0us; 16461us; 13us; 32768us; 1us; 171us; 10us; 173us; 13us; 118us; 23us; 189us; 24us; 179us; 33us; 191us; 34us; 120us; 35us; 122us; 42us; 149us; 43us; 153us; 45us; 114us; 46us; 187us; 47us; 188us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 1us; 32768us; 46us; 190us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 17us; 21us; 25us; 27us; 28us; 30us; 34us; 36us; 40us; 43us; 44us; 47us; 48us; 50us; 51us; 53us; 55us; 58us; 60us; 62us; 63us; 66us; 68us; 70us; 71us; 72us; 74us; 77us; 78us; 101us; 103us; 104us; 127us; 128us; 131us; 154us; 155us; 169us; 187us; 210us; 211us; 212us; 214us; 215us; 234us; 235us; 250us; 251us; 269us; 270us; 271us; 273us; 287us; 305us; 326us; 347us; 348us; 350us; 364us; 382us; 403us; 404us; 406us; 420us; 438us; 459us; 460us; 462us; 476us; 494us; 508us; 526us; 540us; 558us; 579us; 580us; 594us; 612us; 626us; 644us; 645us; 666us; 668us; 670us; 684us; 702us; 704us; 705us; 706us; 707us; 708us; 709us; 710us; 712us; 714us; 728us; 746us; 748us; 749us; 753us; 756us; 757us; 759us; 760us; 774us; 791us; 793us; 807us; 809us; 810us; 824us; 826us; 840us; 857us; 858us; 872us; 874us; 887us; 905us; 923us; 941us; 959us; 964us; 969us; 971us; 973us; 975us; 986us; 997us; 1008us; 1019us; 1030us; 1041us; 1056us; 1073us; 1089us; 1107us; 1125us; 1139us; 1153us; 1167us; 1169us; 1183us; 1197us; 1198us; 1200us; 1214us; 1228us; 1229us; 1243us; 1257us; 1271us; 1285us; 1299us; 1313us; 1327us; 1341us; 1355us; 1369us; 1383us; 1397us; 1411us; 1412us; 1426us; 1427us; 1431us; 1433us; 1434us; 1438us; 1441us; 1442us; 1451us; 1453us; 1454us; 1468us; 1469us; 1470us; 1484us; 1485us; 1486us; 1487us; 1489us; 1490us; 1491us; 1492us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 5us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 5us; 9us; 6us; 7us; 7us; 5us; 5us; 5us; 9us; 6us; 7us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 6us; 6us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 15us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 19us; 19us; 20us; 20us; 20us; 20us; 21us; 21us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 65535us; 65535us; 65535us; 16406us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 65535us; 16411us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 16419us; 16420us; 16421us; 16422us; 16423us; 65535us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 16427us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 65535us; 65535us; 65535us; 65535us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16437us; 65535us; 65535us; 65535us; 16438us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16452us; 65535us; 16453us; 65535us; 65535us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 16458us; 65535us; 16459us; 16461us; 65535us; 16463us; 16464us; 16465us; 65535us; 16466us; 16467us; 16468us; 16469us; |]
let _fsyacc_reductions ()  =    [| 
# 465 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 474 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "CPar.fsy"
                                                               Prog _1 
                   )
# 47 "CPar.fsy"
                 : Absyn.program));
# 485 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 52 "CPar.fsy"
                                                               [] 
                   )
# 52 "CPar.fsy"
                 : 'gentype_Topdecs));
# 495 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 53 "CPar.fsy"
                 : 'gentype_Topdecs));
# 507 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 57 "CPar.fsy"
                 : 'gentype_Topdec));
# 518 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               _1 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdec));
# 529 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 76 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 76 "CPar.fsy"
                 : 'gentype_Vardec));
# 541 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 87 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 87 "CPar.fsy"
                 : 'gentype_Vardesc));
# 552 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 92 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 92 "CPar.fsy"
                 : 'gentype_Vardesc));
# 563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 94 "CPar.fsy"
                                                               _2                                      
                   )
# 94 "CPar.fsy"
                 : 'gentype_Vardesc));
# 574 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 585 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 98 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 98 "CPar.fsy"
                 : 'gentype_Vardesc));
# 597 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 103 "CPar.fsy"
                 : 'gentype_Fundec));
# 610 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 105 "CPar.fsy"
                 : 'gentype_Fundec));
# 624 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 110 "CPar.fsy"
                                                               [] 
                   )
# 110 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 634 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               _1 
                   )
# 111 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 645 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 115 "CPar.fsy"
                                                               [_1]     
                   )
# 115 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 656 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 116 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 668 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "CPar.fsy"
                                                               Block _2 
                   )
# 121 "CPar.fsy"
                 : 'gentype_Block));
# 679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               [] 
                   )
# 125 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 689 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 126 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 701 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 713 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                                DecAndAssign (fst _1, snd _1, _3) :: _5 
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 726 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 132 "CPar.fsy"
                                                               _1 
                   )
# 132 "CPar.fsy"
                 : 'gentype_Stmt));
# 737 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               _1 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Stmt));
# 748 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtM));
# 759 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Return None          
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 769 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 780 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               _1                   
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 791 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 804 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 816 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               Until(_3, _5)        
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 828 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                                                   For(_3, _5, _7, _9)        
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 842 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                            Prim3(_1, _3, _5)  
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 855 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                                 Do(_2, _5)         
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 867 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtU));
# 880 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtU));
# 892 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtU));
# 904 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                               Until(_3, _5)        
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtU));
# 916 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                                                   For(_3, _5, _7, _9)        
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtU));
# 930 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                            Prim3(_1, _3, _5)  
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtU));
# 943 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtU in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                                 Do(_2, _5)         
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 955 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               Access _1           
                   )
# 160 "CPar.fsy"
                 : 'gentype_Expr));
# 966 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               _1                  
                   )
# 161 "CPar.fsy"
                 : 'gentype_Expr));
# 977 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1                  
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 988 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1000 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1012 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1023 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1034 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1044 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                            Prim2("|",  _1, _3) 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1056 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                             Prim2("&",  _1, _3) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1068 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                             Prim2("^",  _1, _3) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1080 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                            Max(_3,_5)
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1092 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                            Min(_3,_5)
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1104 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1116 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1128 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1140 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1152 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1164 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1176 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1188 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1200 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1212 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1224 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1236 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1248 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1260 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               CstI _1             
                   )
# 198 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1271 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               _2                  
                   )
# 199 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1282 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Addr _2             
                   )
# 200 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1293 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               AccVar _1           
                   )
# 204 "CPar.fsy"
                 : 'gentype_Access));
# 1304 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               _2                  
                   )
# 205 "CPar.fsy"
                 : 'gentype_Access));
# 1315 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 206 "CPar.fsy"
                 : 'gentype_Access));
# 1326 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 207 "CPar.fsy"
                 : 'gentype_Access));
# 1337 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 208 "CPar.fsy"
                 : 'gentype_Access));
# 1349 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               []       
                   )
# 212 "CPar.fsy"
                 : 'gentype_Exprs));
# 1359 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               _1       
                   )
# 213 "CPar.fsy"
                 : 'gentype_Exprs));
# 1370 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               [_1]     
                   )
# 217 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1381 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 218 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1393 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "CPar.fsy"
                                                               _1       
                   )
# 222 "CPar.fsy"
                 : 'gentype_Const));
# 1404 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               _1       
                   )
# 223 "CPar.fsy"
                 : 'gentype_Const));
# 1415 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               - _2     
                   )
# 224 "CPar.fsy"
                 : 'gentype_Const));
# 1426 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               -1       
                   )
# 225 "CPar.fsy"
                 : 'gentype_Const));
# 1436 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               TypI     
                   )
# 229 "CPar.fsy"
                 : 'gentype_Type));
# 1446 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               TypC     
                   )
# 230 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1457 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 51;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
